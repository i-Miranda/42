src/timers.c:	pthread_mutex_lock(&table->stop_mutex);
src/timers.c:	stop = table->stop;
src/timers.c:	pthread_mutex_unlock(&table->stop_mutex);
src/timers.c:	pthread_mutex_lock(&table->stop_mutex);
src/timers.c:	table->stop = stop;
src/timers.c:	pthread_mutex_unlock(&table->stop_mutex);
src/print.c:	pthread_mutex_lock(&table->mutex);
src/print.c:		timestamp = timestamp_ms() - table->start_time_ms;
src/print.c:	pthread_mutex_unlock(&table->mutex);
src/print.c:	pthread_mutex_lock(&table->mutex);
src/print.c:	if (!table->stop)
src/print.c:		timestamp = timestamp_ms() - table->start_time_ms;
src/print.c:	pthread_mutex_unlock(&table->mutex);
src/table.c:	if (timestamp_ms() - philo_last_meal_ms > philo->table->time_to_die)
src/table.c:		//pthread_mutex_lock(&philo->table->mutex);
src/table.c:			print_uint_fd(timestamp_ms() - philo->table->start_time_ms,
src/table.c:		//pthread_mutex_unlock(&philo->table->mutex);
src/table.c:	if (philo->table->times_must_eat > 0
src/table.c:		&& philo_meals_eaten >= philo->table->times_must_eat)
src/table.c:	table->start_time_ms = timestamp_ms();
src/table.c:	table->philos = NULL;
src/table.c:	head = table->philos;
src/table.c:	while (i < table->philo_count)
src/table.c:		if (i == table->philo_count - 1)
src/table.c:	table->philos = head;
src/table.c:	pthread_mutex_init(&table->mutex, NULL);
src/table.c:	pthread_mutex_init(&table->stop_mutex, NULL);
src/table.c:		philo = table->philos;
src/table.c:			&& table->times_must_eat > 0 && philos_done >= table->philo_count)
src/table.c:	current_philo = table->philos;
src/table.c:	table->philo_count = 0;
src/table.c:	table->philos = NULL;
src/table.c:	pthread_mutex_destroy(&table->mutex);
src/table.c:	pthread_mutex_destroy(&table->stop_mutex);
src/table.c:	philo = table->philos;
src/table.c:	pthread_create(&table->thread, NULL, table_update, table);
src/table.c:	pthread_join(table->thread, NULL);
src/table.c:	philo = table->philos;
src/philosophers.c:	usleep_until_stop(philo->table, philo->table->time_to_eat);
src/philosophers.c:	usleep_until_stop(philo->table, philo->table->time_to_sleep);
src/philosophers.c:	if (philo->table->philo_count == 1)
src/philosophers.c:		usleep_until_stop(philo->table, philo->table->time_to_die);
src/philosophers.c:	(*philo)->last_meal_ms = table->start_time_ms;
src/check_args.c:	table->philo_count = ft_atoui(argv[1]);
src/check_args.c:	table->time_to_die = ft_atoui(argv[2]);
src/check_args.c:	table->time_to_eat = ft_atoui(argv[3]);
src/check_args.c:	table->time_to_sleep = ft_atoui(argv[4]);
src/check_args.c:		table->times_must_eat = ft_atoui(argv[5]);
src/check_args.c:		table->times_must_eat = 0;
src/check_args.c:	table->stop = false;
